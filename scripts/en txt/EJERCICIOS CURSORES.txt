-- EJEMPLOS CURSORES   (impolicitos, explicitos)

SET SERVEROUTPUT ON;
DECLARE
  CURSOR C1 IS SELECT * FROM HR.REGIONS;
  V1 HR.REGIONS%ROWTYPE;
BEGIN
  OPEN C1;
  FETCH C1 INTO  V1;
  DBMS_OUTPUT.PUT_LINE(V1.REGION_NAME);
  FETCH C1 INTO  V1;
  DBMS_OUTPUT.PUT_LINE(V1.REGION_NAME);
  CLOSE C1;
END;
/


--RECORRER UN CURSOR CON UN LOOP

SET SERVEROUTPUT ON;
DECLARE
  CURSOR C1 IS SELECT * FROM REGIONS;
  V1 REGIONS%ROWTYPE;
BEGIN
  OPEN C1;
  LOOP
      FETCH C1 INTO  V1;
      EXIT WHEN C1%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(V1.REGION_NAME);
  END LOOP;
  CLOSE C1;
END;
/



--RECORRER UN CURSOR CON UN FOR

SET SERVEROUTPUT ON;
DECLARE
  CURSOR C1 IS SELECT * FROM REGIONS;
BEGIN
  FOR i IN C1 LOOP
    DBMS_OUTPUT.PUT_LINE(i.REGION_NAME);
  END LOOP;
END;
/


---CURSORES CON PARAMETROS

SET SERVEROUTPUT ON;
DECLARE
  CURSOR C1(SAL NUMBER) IS SELECT * FROM EMPLOYEES
  WHERE SALARY> SAL;
  EMPL  EMPLOYEES%ROWTYPE;
BEGIN
  OPEN C1(15000);
  LOOP
      FETCH C1 INTO  EMPL;
      EXIT WHEN C1%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(EMPL.FIRST_NAME||' '||EMPL.SALARY);
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('Se han encontrado--->>> '||C1%ROWCOUNT||' empleados');
  CLOSE C1;
END;
/


--CURSORES CON PARAMETROS QUE SON INTRODUCIDOS DESDE TECLADO

SET SERVEROUTPU ON;
DECLARE
  CURSOR C1(SAL number) IS SELECT * FROM EMPLOYEES
  WHERE SALARY> SAL;
  EMPL EMPLOYEES%ROWTYPE;
  SALARIO_BUSCAR NUMBER:=0;

BEGIN
  OPEN C1(&SALARIO_BUSCAR);
  LOOP
      FETCH C1 INTO  EMPL;
      EXIT WHEN C1%NOTFOUND;
      DBMS_OUTPUT.PUT_LINE(EMPL.FIRST_NAME||' '||EMPL.SALARY);
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('Se han encontrado--->>> '||C1%ROWCOUNT||' empleados');
  CLOSE C1;
END;
/




--EJEMPLO CON CURSORES PARA SACAR TIPO REPORTE

DECLARE
    CURSOR C_DPTO_EMPLEADOS IS
        SELECT e.department_id,d.department_name,e.employee_id,e.first_name,e.last_name,e.salary 
        FROM HR.employees e
        JOIN HR.departments d ON e.department_id=d.department_id
        WHERE salary<2800
        ORDER BY d.department_name DESC, salary DESC;

    v_last_department_id   HR.departments.department_id%TYPE:=0;
    v_num NUMBER := 0;

BEGIN
    DBMS_OUTPUT.PUT_LINE(LPAD('-',70,'-'));
    DBMS_OUTPUT.PUT_LINE('INFORME DE EMPLEADOS POR DEPARTAMENTOS');
    DBMS_OUTPUT.PUT_LINE(LPAD('-',70,'-'));
    FOR emp IN C_DPTO_EMPLEADOS
    LOOP
        IF v_last_department_id<>emp.department_id THEN
            DBMS_OUTPUT.PUT_LINE(chr(13)||'DEPARTAMENTO: ' || UPPER(emp.department_name));
            DBMS_OUTPUT.PUT_LINE(LPAD('*',70,'*'));
        ELSE
            DBMS_OUTPUT.PUT_LINE(rpad(emp.employee_id, 10) || rpad(emp.first_name|| ' ' || emp.last_name, 20) ||TO_CHAR(emp.salary,'$999,999.99'));
        END IF;
        v_last_department_id:=emp.department_id;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE(LPAD('-',70,'-'));
    DBMS_OUTPUT.PUT_LINE('FECHA REPORTE:'||TO_CHAR(SYSDATE));
END;
/



--EJEMPLO CON MANEJO DE CURSORES PARA VISUALIZAR LOS SALARIOS DE LOS EMPLEADOS
--SI APARECE EL NOMBRE DE "Steven King" SE DEBE GENERAR UN RAISE_APLICATION_ERROR CON EL MENSAJE
--DE QUE NO SE PUEDE VISUALIZAR ESTE SALARIO

SET SERVEROUTPUT ON;
DECLARE
CURSOR C1 IS SELECT first_name,last_name,salary from EMPLOYEES;
BEGIN
  FOR I IN C1 LOOP
     IF I.FIRST_NAME='Steven' AND I.LAST_NAME='King' THEN
        RAISE_APPLICATION_ERROR(-20300,'El salario de Steven King no puede ser visto');
    ELSE
        DBMS_OUTPUT.PUT_LINE(rpad(i.first_name ||' ' || i.last_name,70,' ') || ': '|| TO_CHAR(i.salary,'$999,999.99') || ' Dólares');
    END IF;
  END LOOP;
END;
/




--HACIENDO USO DE DOS CURSORES DESPLEGAR EL NOMBRE DEL EMPLEADO
-- Y SI ESTE NO ES JEFE DE NINGUN DEPARTAMENTO DESPLEGAR EL MENSAJE "No es JEFE DE NADA"
-- CASO CONTRARIO EL NOMBRE DEL EMPLEADO Y EL MENSAJE "ES JEFE DEL DEPARTAMENTO" Y PONER EL NOMBRE DEL DEPARTAMENTO

 
SET SERVEROUTPUT ON
DECLARE
  DEPARTAMENTO DEPARTMENTS%ROWTYPE;
  JEFE DEPARTMENTS.MANAGER_ID%TYPE;
  CURSOR C1 IS SELECT * FROM EMPLOYEES;
  CURSOR C2(J DEPARTMENTS.MANAGER_ID%TYPE)
     IS SELECT * FROM DEPARTMENTS WHERE MANAGER_ID=J;

BEGIN
   FOR EMPLEADO IN C1 LOOP
      OPEN C2(EMPLEADO.EMPLOYEE_ID);
      FETCH C2 INTO DEPARTAMENTO;
      IF C2%NOTFOUND THEN
         DBMS_OUTPUT.PUT_LINE(EMPLEADO.FIRST_NAME || ' ' || EMPLEADO.LAST_NAME ||' ---->>>>> No es JEFE de NADA');
      ELSE
         DBMS_OUTPUT.PUT_LINE(EMPLEADO.FIRST_NAME || ' ' || EMPLEADO.LAST_NAME  || 'ES JEFE DEL DEPARTAMENTO ----->>>>>>>'|| DEPARTAMENTO.DEPARTMENT_NAME);
      END IF;
      CLOSE C2;
   END LOOP;
END;
/

--EJEMPLO CURSOR PARA DESPLEGAR EL NOMBRE DEL DEPARTAMENTO Y LA CANTIDAD DE EMPLEADOS QUE POSEE
--EL VALOR DEL CODIGO DE EMPLEADO DEBE SER INTRODUCIDO DEDE TECLADO

SET SERVEROUTPUT ON
DECLARE
   CODIGO DEPARTMENTS.DEPARTMENT_ID%TYPE;
   C DEPARTMENTS.DEPARTMENT_ID%TYPE;
   CURSOR C1(COD DEPARTMENTS.DEPARTMENT_ID%TYPE ) IS SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID=COD;
   NUM_EMPLE NUMBER;
BEGIN
  C := &CODIGO;
  OPEN C1(C);
  FETCH C1 INTO NUM_EMPLE;
  DBMS_OUTPUT.PUT_LINE('Número de empleados del DEPARTAMENTO con codigo  ' ||c||' es '||NUM_EMPLE);
END;
/




--EJEMPLO PARA MANEJO DE CURSORES PERO SIN DECLARARLO SINO DIRECTAMENTE EN EL FOR
--PARA QUE NOS DEVUELVA LOS NOMBRES DE LOS EMPLEADOS QUE EJERZAN EL CARGO "ST_CLERCK"

SET SERVEROUTPUT ON;
BEGIN
  FOR EMPLE IN(SELECT * FROM EMPLOYEES WHERE JOB_ID='ST_CLERK') LOOP
     DBMS_OUTPUT.PUT_LINE(EMPLE.FIRST_NAME||' '||EMPLE.LAST_NAME);
  END LOOP;
END;
/


--HACER LA ACTUALIZACIOND DEL SALARIO DE LOS EMPLEADOS
--INCREMENTARLES EN 10% SI SE LES PAGA ALGUNA COMISION
--INCREMENTARLES EL 20% SINO SE LES PAGA NINGUNA COMISION
--ABRIENDO EL CURSOS HACIENDO USO DE LA SENTENCIA FOR UPDATE

SET SERVEROUTPUT ON:
DECLARE
   empl employees%rowtype;
   CURSOR cur IS SELECT * FROM employees FOR UPDATE;
BEGIN
   OPEN cur;
   LOOP
      FETCH cur INTO empl;
      EXIT   WHEN cur%notfound;
      IF EMPL.COMMISSION_PCT IS NOT NULL THEN
         UPDATE employees SET SALARY=SALARY*1.10 WHERE CURRENT OF cur;
      ELSE
         UPDATE employees SET SALARY=SALARY*1.20 WHERE CURRENT OF cur;
      END IF;
   END LOOP;
   CLOSE cur;
END;
/




--HACER LA ACTUALIZACIOND DEL SALARIO DE LOS EMPLEADOS
--INCREMENTARLES EN 2% SI SE LES PAGA UN SALARIO MAYOR O IGUAL A 8000
--INCREMENTARLES EL 3%  SI SE LES PAGA UN SALARIO MENOR A 8000
--ABRIENDO EL CURSOS HACIENDO USO DE LA SENTENCIA FOR UPDATE


SET SERVEROUTPUT ON
DECLARE
CURSOR C1 IS SELECT * FROM EMPLOYEES FOR UPDATE;
BEGIN
  FOR EMPLEADO IN C1 LOOP
    IF EMPLEADO.SALARY > 8000 THEN
       UPDATE EMPLOYEES SET SALARY=SALARY*1.02 WHERE CURRENT OF C1;
    ELSE
       UPDATE EMPLOYEES SET SALARY=SALARY*1.03 WHERE CURRENT OF C1;
    END IF;
  END LOOP;
  COMMIT;
END ;