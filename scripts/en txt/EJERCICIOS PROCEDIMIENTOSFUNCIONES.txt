--EJEMPLOS PROCEDIMIENTOS Y FUNCIONES
--EJEMPLO CON PASE DE PARAMETRO IN

CREATE OR REPLACE PROCEDURE CALC_IMPT (EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,T1 IN NUMBER)

IS
  IMPTO NUMBER:=0;
  SAL   NUMBER:=0;
BEGIN
   SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
   IMPTO:=SAL*T1/100;
   DBMS_OUTPUT.PUT_line('SALARIO:'||SAL);
   DBMS_OUTPUT.PUT_line('IMPUESTO:'||IMPTO);
END;
/

-- PARA EJECUTAR EL PROCEDIMIENTO
SET SERVEROUTPUT ON;
BEGIN
  CALC_IMPT(100,15);
END;
/

--OTRA FORMA DE EJECUCION

EXECUTE CALC_IMPT(100,15);

--EJEMPLO CON CONTROLES DE RANGOS DE VALORES Y ERRORES EN CASO DE NO EXISTIR EL CODIGO DE EMPLEADO

CREATE OR REPLACE PROCEDURE CALC_IMPT_A (EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,T1 IN NUMBER)

IS
  IMPTO NUMBER:=0;
  SAL   NUMBER:=0;
BEGIN
   IF T1 <0 OR T1 > 60 THEN 
      RAISE_APPLICATION_ERROR(-20000,'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
   END IF;
   SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
   IMPTO:=SAL*T1/100;
   DBMS_OUTPUT.PUT_line('SALARIO:'||SAL);
   DBMS_OUTPUT.PUT_line('IMPUESTO:'||IMPTO);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_line('NO EXISTE EL EMPLEADO');
END;
/


EXECUTE CALC_IMPT_A(100,15);


--EJERCICIOS DE PROCEDIMIENTOS CON PARAMTROS OUT

create or replace PROCEDURE CALC_IMPT_OUT (EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,T1 IN NUMBER,R1 OUT NUMBER)
IS
  SAL NUMBER:=0;
BEGIN
   IF T1 <0 OR T1 > 60 THEN 
      RAISE_APPLICATION_ERROR(-20000,'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
   END IF;    
   SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
   R1:=SAL*T1/100;
   DBMS_OUTPUT.PUT_line('SALARY:'||SAL);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
       DBMS_OUTPUT.PUT_line('NO EXISTE EL EMPLEADO');
END;
/

--PARA EJECUTAR CON PROCEDIMIENTO ANONIMO

set serveroutput on
DECLARE
  A NUMBER;
  B NUMBER;
  R NUMBER;
begin
  A:=120;
  B:=10;
  R:=0;
  CALC_IMPT_OUT(A,B,R);
  DBMS_OUTPUT.PUT_LINE('R='||R);
end;




--PROCEDIMIENTOS CON PARAMETROS IN OUT

create or replace PROCEDURE CALC_IMPT_IN_OUT(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,T1 IN OUT NUMBER)
IS
  SAL NUMBER:=0;
BEGIN
   IF T1 <0 OR T1 > 60 THEN 
      RAISE_APPLICATION_ERROR(-20000,'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
   END IF;    
   SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
   DBMS_OUTPUT.PUT_LINE('T1='||T1);
   T1:=SAL*T1/100;
   DBMS_OUTPUT.PUT_line('SALARY:'||SAL);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
       DBMS_OUTPUT.PUT_line('NO EXISTE EL EMPLEADO');
END;
/

--LLAMADA AL PROCEDIMIENTO

set serveroutput on
DECLARE
  A NUMBER;
  B NUMBER;
  R NUMBER;
begin
  A:=120;
  B:=10;
  CALC_IMPT_IN_OUT(A,B);
  DBMS_OUTPUT.PUT_LINE('B='||B);
end;



--EJERCICIOS CON FUNCIONES

CREATE OR REPLACE FUNCTION CALC_IMPT_F
    (EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,T1 IN NUMBER) RETURN NUMBER
IS
  IMPT NUMBER:=0;
  SAL NUMBER:=0;
BEGIN
   IF T1 <0 OR T1 > 60 THEN 
      RAISE_APPLICATION_ERROR(-20000,'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
   END IF;
   SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
   IMPT:=SAL*T1/100;
   RETURN IMPT;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
       DBMS_OUTPUT.PUT_line('NO EXISTE EL EMPLEADO');
END;
/

--FORMA DE LLAMR A LA FUNCION

set serveroutput on
DECLARE
  A NUMBER;
  B NUMBER;
  R NUMBER;
begin
  A:=120;
  B:=10;
  R:=CALC_IMPT_F(A,B);
  DBMS_OUTPUT.PUT_LINE('R='||R);
end;

--TAMBIEN SE PUEDE EMPLEAR LA FUNCION EN UNA CONSULTA SQL

SELECT EMPLOYEE_ID,SALARY,CALC_IMPT_F(EMPLOYEE_ID,10) FROM EMPLOYEES;